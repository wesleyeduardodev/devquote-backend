version: "3.9"

services:
  postgres:
    image: postgres:17
    container_name: devquote-postgres
    ports:
      - "5434:5434"
    environment:
      POSTGRES_DB: devquote
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      PGPORT: 5434
    volumes:
      - devquote_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d devquote -h localhost -p 5434" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - devquote-network

  devquote-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: devquote-backend
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5434/devquote?sslmode=disable"
      SPRING_DATASOURCE_USERNAME: "postgres"
      SPRING_DATASOURCE_PASSWORD: "root"
      SERVER_PORT: "8080"
      # Variáveis de email (necessárias para o backend iniciar)
      DEVQUOTE_EMAIL_ENABLED: "false"
      DEVQUOTE_EMAIL_FROM: "noreply@devquote.com"
      MAIL_HOST: "localhost"
      MAIL_PORT: "587"
      MAIL_USERNAME: "test"
      MAIL_PASSWORD: "test"
      # AWS (pode deixar vazio se não usar)
      AWS_ACCESS_KEY_ID: "test"
      AWS_SECRET_ACCESS_KEY: "test"
      AWS_S3_BUCKET_NAME: "test"
      AWS_S3_REGION: "us-east-1"
    networks:
      - devquote-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  prometheus:
    image: prom/prometheus:latest
    container_name: devquote-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - devquote-network
    depends_on:
      - devquote-backend

  grafana:
    image: grafana/grafana:latest
    container_name: devquote-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - devquote-network
    depends_on:
      - prometheus

volumes:
  devquote_pgdata:
  prometheus_data:
  grafana_data:

networks:
  devquote-network:
    driver: bridge
